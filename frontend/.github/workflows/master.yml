name: Main pipeline

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "LICENCE"
      - "*.md"

jobs:
  run:
    name: Jobs
    runs-on: ubuntu-latest
    steps:
      - name: 1. Set up Project Files
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 2. Set up Terraform client
        run: wget https://releases.hashicorp.com/terraform/1.0.8/terraform_1.0.8_linux_amd64.zip; unzip terraform_1.0.8_linux_amd64.zip; mv terraform ./iac; chmod +x ./iac/terraform; rm terraform_1.0.8_linux_amd64.zip;

      - name: 3. Set up Kubernetes client
        run: curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"; mv kubectl.sha256 ./iac/kubectl; chmod +x ./iac/kubectl;

      - name: 4. Set up Compile, Build and Test environment
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 5. Compile and Build
        env:
          CI: false
        run: sh ./build.sh
      
      - name: 6. Packaging
        env:
          REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}
          REPOSITORY_ID: ${{ secrets.REPOSITORY_ID }}
          CONTRAST_API_KEY: ${{ secrets.CONTRAST_API_KEY }}
          CONTRAST_SERVICE_KEY: ${{ secrets.CONTRAST_SERVICE_KEY }}
          CONTRAST_USER_NAME: ${{ secrets.CONTRAST_USER_NAME }}
        run: sh ./package.sh

      - name: 7. Publishing
        env:
          REPOSITORY_URL: ${{ secrets.REPOSITORY_URL }}
          REPOSITORY_ID: ${{ secrets.REPOSITORY_ID }}
          REPOSITORY_USER: ${{ secrets.REPOSITORY_USER }}
          REPOSITORY_PASSWORD: ${{ secrets.REPOSITORY_PASSWORD }}
        run: sh ./publish.sh